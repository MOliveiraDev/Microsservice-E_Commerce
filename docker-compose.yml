version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:17
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: ecommerce
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ecommerce-net

  # Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - ecommerce-net

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - ecommerce-net

  # Servi√ßos
  auth-service:
    build: ./authentication
    container_name: auth-service
    ports:
      - "8081:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - postgres
    networks:
      - ecommerce-net

  product-service:
    build: ./product
    container_name: product-service
    ports:
      - "8082:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - postgres
      - kafka
    networks:
      - ecommerce-net

  order-service:
    build: ./order
    container_name: order-service
    ports:
      - "8083:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - postgres
      - kafka
    networks:
      - ecommerce-net

  notification-service:
    build: ./notification
    container_name: notification-service
    ports:
      - "8084:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - kafka
    networks:
      - ecommerce-net

  gateway-service:
    build: ./gateway
    container_name: gateway-service
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
      - product-service
      - order-service
      - notification-service
    networks:
      - ecommerce-net

volumes:
  postgres_data:

networks:
  ecommerce-net:
    driver: bridge